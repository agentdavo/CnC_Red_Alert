# Build the main game code as a static library

# List of C/C++ sources converted from the historical MAKEFILE
set(CODE_SOURCES
2KEYFRAM.CPP
AADATA.CPP
ABSTRACT.CPP
ADATA.CPP
ADPCM.CPP
AIRCRAFT.CPP
ALLOC.CPP
ANIM.CPP
AUDIO.CPP
B64PIPE.CPP
B64STRAW.CPP
BAR.CPP
BASE.CPP
BASE64.CPP
BBDATA.CPP
BDATA.CPP
BENCH.CPP
BFIOFILE.CPP
BIGCHECK.CPP
BLOWFISH.CPP
BLOWPIPE.CPP
BLWSTRAW.CPP
BMP8.CPP
BUFF.CPP
BUILDING.CPP
BULLET.CPP
CARGO.CPP
CARRY.CPP
CCDDE.CPP
CCFILE.CPP
CCINI.CPP
CCMPATH.CPP
CCPTR.CPP
CCTEN.CPP
CDATA.CPP
CDFILE.CPP
CELL.CPP
CHECKBOX.CPP
CHEKLIST.CPP
CLASS.CPP
COLRLIST.CPP
COMBAT.CPP
COMBUF.CPP
COMINIT.CPP
COMQUEUE.CPP
CONFDLG.CPP
CONNECT.CPP
CONQUER.CPP
CONST.CPP
CONTROL.CPP
COORD.CPP
CRATE.CPP
CRC.CPP
CRCPIPE.CPP
CRCSTRAW.CPP
CREDITS.CPP
CREW.CPP
CSTRAW.CPP
DDE.CPP
DEBUG.CPP
DESCDLG.CPP
DIAL8.CPP
DIALOG.CPP
DIBFILE.CPP
DIBUTIL.CPP
DISPLAY.CPP
DOOR.CPP
DPMI.CPP
DRIVE.CPP
DROP.CPP
DTABLE.CPP
DYNAVEC.CPP
EDIT.CPP
EGOS.CPP
ENDING.CPP
EVENT.CPP
EXPAND.CPP
FACE.CPP
FACING.CPP
FACTORY.CPP
FIELD.CPP
FILE.CPP
FINDPATH.CPP
FIXED.CPP
FLASHER.CPP
FLY.CPP
FOOT.CPP
FUSE.CPP
GADGET.CPP
GAMEDLG.CPP
GAUGE.CPP
GETCPU.CPP
GLOBALS.CPP
GOPTIONS.CPP
GSCREEN.CPP
HDATA.CPP
HEAP.CPP
HELP.CPP
HOUSE.CPP
HSV.CPP
ICONLIST.CPP
IDATA.CPP
INFANTRY.CPP
INI.CPP
INIBIN.CPP
INICODE.CPP
INIT.CPP
INT.CPP
INTERNET.CPP
INTERPAL.CPP
INTRO.CPP
IOMAP.CPP
IOOBJ.CPP
# IPX real-mode implementation replaced by src/ipx_stub.c
# IPX.CPP and IPX95.CPP excluded from build
IPXADDR.CPP
IPXCONN.CPP
IPXGCONN.CPP
IPXMGR.CPP
ITABLE.CPP
JSHELL.CPP
KEY.CPP
KEYBOARD.CPP
KEYFRAME.CPP
LAYER.CPP
LCW.CPP
LCWPIPE.CPP
LCWSTRAW.CPP
LCWUNCMP.CPP
LINK.CPP
LIST.CPP
LOADDLG.CPP
LOGIC.CPP
LZO1X_C.CPP
LZO1X_D.CPP
LZOPIPE.CPP
LZOSTRAW.CPP
LZW.CPP
LZWOTRAW.CPP
LZWPIPE.CPP
LZWSTRAW.CPP
MAP.CPP
MAPEDDLG.CPP
MAPEDIT.CPP
MAPEDPLC.CPP
MAPEDSEL.CPP
MAPEDTM.CPP
MAPSEL.CPP
MCI.CPP
MCIMOVIE.CPP
MENUS.CPP
MISSION.CPP
MIXFILE.CPP
MONOC.CPP
MOUSE.CPP
MP.CPP
MPGSET.CPP
MPLAYER.CPP
MPLIB.CPP
MPLPC.CPP
MPMGRD.CPP
MPMGRW.CPP
MPU.CPP
MSGBOX.CPP
MSGLIST.CPP
NETDLG.CPP
NOSEQCON.CPP
NULLCONN.CPP
NULLDLG.CPP
NULLMGR.CPP
NUMBER.CPP
OBJECT.CPP
ODATA.CPP
OPTIONS.CPP
OVERLAY.CPP
PACKET.CPP
PIPE.CPP
PK.CPP
PKPIPE.CPP
PKSTRAW.CPP
POWER.CPP
PROFILE.CPP
QUEUE.CPP
RADAR.CPP
RADIO.CPP
RAMFILE.CPP
RAND.CPP
RANDOM.CPP
RAWFILE.CPP
RAWOLAPI.CPP
READLINE.CPP
RECT.CPP
REINF.CPP
RGB.CPP
RNDSTRAW.CPP
ROTBMP.CPP
RULES.CPP
SAVELOAD.CPP
SCENARIO.CPP
SCORE.CPP
SCROLL.CPP
SDATA.CPP
SEDITDLG.CPP
SENDFILE.CPP
SEQCONN.CPP
SESSION.CPP
SHA.CPP
SHAPEBTN.CPP
SHAPIPE.CPP
SHASTRAW.CPP
SIDEBAR.CPP
SLIDER.CPP
SMUDGE.CPP
SOUNDDLG.CPP
SPECIAL.CPP
SPRITE.CPP
STARTUP.CPP
STATBTN.CPP
STATS.CPP
STRAW.CPP
STUB.CPP
SUPER.CPP
SURFACE.CPP
TAB.CPP
TACTION.CPP
TARCOM.CPP
TARGET.CPP
TCPIP.CPP
TDATA.CPP
TEAM.CPP
TEAMTYPE.CPP
TECHNO.CPP
TEMP.CPP
TEMPLATE.CPP
TENMGR.CPP
TERRAIN.CPP
TEVENT.CPP
TEXTBTN.CPP
THEME.CPP
TOGGLE.CPP
TOOLTIP.CPP
TRACKER.CPP
TRIGGER.CPP
TRIGTYPE.CPP
TURRET.CPP
TXTLABEL.CPP
UDATA.CPP
UDPADDR.CPP
UNIT.CPP
UTRACKER.CPP
VDATA.CPP
VECTOR.CPP
VERSION.CPP
VESSEL.CPP
VISUDLG.CPP
VORTEX.CPP
W95TRACE.CPP
WARHEAD.CPP
WEAPON.CPP
WINSTUB.CPP
WOLAPIOB.CPP
WOLEDIT.CPP
WOLSTRNG.CPP
WOL_CGAM.CPP
WOL_CHAT.CPP
WOL_DNLD.CPP
WOL_GSUP.CPP
WOL_LOGN.CPP
WOL_MAIN.CPP
WOL_OPT.CPP
WRITEPCX.CPP
WSPIPX.CPP
WSPROTO.CPP
WSPUDP.CPP
XPIPE.CPP
XSTRAW.CPP
_WSPROTO.CPP
lvgl/lvgl_bridge.c
lvgl/lvgl_backend.c
lvgl/terminal.c
)

set(CODE_ASM
2KEYFBUF.ASM
2SUPPORT.ASM
2TXTPRNT.ASM
COORDA.ASM
CPUID.ASM
KEYFBUFF.ASM
LCWCOMP.ASM
SUPPORT.ASM
TXTPRNT.ASM
 WINASM.ASM
 ../WIN32LIB/DRAWBUFF/BITBLIT.ASM
 ../WIN32LIB/DRAWBUFF/CLEAR.ASM
 ../WIN32LIB/DRAWBUFF/DRAWLINE.ASM
 ../WIN32LIB/DRAWBUFF/FILLQUAD.ASM
 ../WIN32LIB/DRAWBUFF/FILLRECT.ASM
 ../WIN32LIB/DRAWBUFF/FTPUTPIX.ASM
 ../WIN32LIB/DRAWBUFF/GETCLIP.ASM
 ../WIN32LIB/DRAWBUFF/GETPIX.ASM
 ../WIN32LIB/DRAWBUFF/PUTPIX.ASM
 ../WIN32LIB/DRAWBUFF/REMAP.ASM
 ../WIN32LIB/DRAWBUFF/SCALE.ASM
 ../WIN32LIB/DRAWBUFF/SHADOW.ASM
 ../WIN32LIB/DRAWBUFF/STAMP.ASM
 ../WIN32LIB/DRAWBUFF/STMPCACH.ASM
 ../WIN32LIB/DRAWBUFF/SZREGION.ASM
 ../WIN32LIB/DRAWBUFF/TOBUFF.ASM
 ../WIN32LIB/DRAWBUFF/TOPAGE.ASM
 ../WIN32LIB/MEM/MEM_COPY.ASM
 ../WIN32LIB/MEM/VMPAGEIN.ASM
 ../WIN32LIB/AUDIO/AUDUNCMP.ASM
 ../WIN32LIB/AUDIO/OLSOSDEC.ASM
 ../WIN32LIB/AUDIO/SOSCODEC.ASM
)

list(TRANSFORM CODE_SOURCES PREPEND "${CMAKE_CURRENT_LIST_DIR}/")
list(TRANSFORM CODE_ASM PREPEND "${CMAKE_CURRENT_LIST_DIR}/")

if(USE_C_BLITTERS OR NOT ENABLE_ASM)
    list(REMOVE_ITEM CODE_ASM
        "${CMAKE_CURRENT_LIST_DIR}/KEYFBUFF.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/2KEYFBUF.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/TXTPRNT.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/2TXTPRNT.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/WINASM.ASM")
    list(APPEND CODE_SOURCES "${CMAKE_SOURCE_DIR}/src/blit_stub.c")
endif()

if(NOT ENABLE_ASM)
    list(APPEND CODE_SOURCES
        "${CMAKE_CURRENT_LIST_DIR}/../src/cpuid.c"
        "${CMAKE_SOURCE_DIR}/src/support.c"
        "${CMAKE_SOURCE_DIR}/src/support_stub.c"
        "${CMAKE_SOURCE_DIR}/src/audio_decompress.c"
        "${CMAKE_SOURCE_DIR}/src/drawbuff_c.c")
    list(REMOVE_ITEM CODE_ASM
        "${CMAKE_CURRENT_LIST_DIR}/CPUID.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/COORDA.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/SUPPORT.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/2SUPPORT.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/LCWCOMP.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/BITBLIT.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/CLEAR.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/DRAWLINE.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/FILLQUAD.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/FILLRECT.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/FTPUTPIX.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/GETCLIP.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/GETPIX.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/PUTPIX.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/REMAP.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/SCALE.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/SHADOW.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/STAMP.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/STMPCACH.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/SZREGION.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/TOBUFF.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/DRAWBUFF/TOPAGE.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/AUDIO/AUDUNCMP.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/AUDIO/OLSOSDEC.ASM"
        "${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/AUDIO/SOSCODEC.ASM")
    list(APPEND CODE_SOURCES
        "${CMAKE_SOURCE_DIR}/src/support_stub.c"
        "${CMAKE_SOURCE_DIR}/src/dos_graphics.c")
    set_source_files_properties(
        "${CMAKE_SOURCE_DIR}/src/dos_graphics.c" PROPERTIES LANGUAGE CXX)
elseif(REPLACEMENT_ASM_DIR)
    file(GLOB CODE_ASM "${REPLACEMENT_ASM_DIR}/*.asm")
endif()

set(ASM_OBJECTS)
if(ENABLE_ASM)
    if(WIN32)
        set(ASM_EXT obj)
    else()
        set(ASM_EXT o)
    endif()
    foreach(ASM_FILE ${CODE_ASM})
        get_filename_component(_name ${ASM_FILE} NAME_WE)
        set(out_file ${CMAKE_CURRENT_BINARY_DIR}/${_name}.${ASM_EXT})
        add_custom_command(
            OUTPUT ${out_file}
            COMMAND ${ASM_COMPILER} -f ${ASM_FORMAT} -o ${out_file} ${ASM_FILE}
            DEPENDS ${ASM_FILE}
        )
        list(APPEND ASM_OBJECTS ${out_file})
    endforeach()
    set_source_files_properties(${ASM_OBJECTS} PROPERTIES GENERATED TRUE EXTERNAL_OBJECT TRUE)
endif()

add_library(gamecode STATIC ${CODE_SOURCES} ${ASM_OBJECTS})

target_include_directories(gamecode PUBLIC
    ${CMAKE_CURRENT_LIST_DIR}/../WIN32LIB/INCLUDE
    ${CMAKE_CURRENT_LIST_DIR}/../VQ/INCLUDE/WWLIB32
    ${CMAKE_CURRENT_LIST_DIR}/../VQ/VQA32
    ${CMAKE_CURRENT_LIST_DIR}/../VQ/VQM32
    ${CMAKE_CURRENT_LIST_DIR}/../src/ddraw
    ${CMAKE_CURRENT_LIST_DIR}/../src
    "${CMAKE_SOURCE_DIR}"
)

target_compile_definitions(gamecode PUBLIC $<$<BOOL:${USE_LVGL}>:USE_LVGL>)
target_compile_definitions(gamecode PUBLIC $<$<BOOL:${ENABLE_ASM}>:ENABLE_ASM>)

set(CODE_SOURCES ${CODE_SOURCES} PARENT_SCOPE)
set(CODE_ASM ${CODE_ASM} PARENT_SCOPE)
